{
  "$id": "https://osmosis.zone/assetlists.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "AssetList",
  "description": "Asset lists are a similar mechanism to allow frontends and other UIs to fetch metadata associated with Cosmos SDK denoms, especially for assets sent over IBC.",
  "type": "object",
  "required": [
    "chainName",
    "assets"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "pattern": "^(\\.\\./)+assetlist\\.schema\\.json$"
    },
    "assets": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/asset"
      },
      "minContains": 1
    },
    "chainName": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "$defs": {
    "asset": {
      "type": "object",
      "required": [
        "denomUnits",
        "base",
        "display",
        "name",
        "symbol"
      ],
      "properties": {
        "deprecated": {
          "type": "boolean",
          "description": "[OPTIONAL] Whether the asset has been deprecated for use. For readability, it is best to omit this property unless TRUE."
        },
        "description": {
          "type": "string",
          "description": "[OPTIONAL] A short description of the asset"
        },
        "address": {
          "type": "string",
          "description": "[OPTIONAL] The address of the asset. Only required for type_asset : cw20, snip20"
        },
        "base": {
          "type": "string",
          "description": "The base unit of the asset. Must be in denom_units."
        },
        "name": {
          "type": "string",
          "description": "The project name of the asset. For example Bitcoin.",
          "maxLength": 42
        },
        "display": {
          "type": "string",
          "description": "The human friendly unit of the asset. Must be in denom_units."
        },
        "symbol": {
          "type": "string",
          "description": "The symbol of an asset. For example BTC."
        },
        "traces": {
          "type": "array",
          "description": "The origin of the asset, starting with the index, and capturing all transitions in form and location.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/ibcTransition"
              },
              {
                "$ref": "#/$defs/ibcCw20Transition"
              },
              {
                "$ref": "#/$defs/nonIbcTransition"
              }
            ]
          },
          "minContains": 1
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "png": {
                "type": "string",
                "format": "uri-reference",
                "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.png$"
              },
              "svg": {
                "type": "string",
                "format": "uri-reference",
                "pattern": "^https://raw\\.githubusercontent\\.com/cosmos/chain-registry/master/(|testnets/|_non-cosmos/)[a-z0-9]+/images/.+\\.svg$"
              },
              "theme": {
                "type": "object",
                "properties": {
                  "circle": {
                    "type": "boolean"
                  },
                  "primaryColorHex": {
                    "type": "string",
                    "pattern": "^#[0-9a-fA-F]{6}$"
                  },
                  "darkMode": {
                    "type": "boolean"
                  }
                },
                "minProperties": 1,
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "minItems": 1
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minContains": 1,
          "maxContains": 20
        },
        "assetType": {
          "type": "string",
          "enum": [
            "sdk.coin",
            "cw20",
            "erc20",
            "ics20",
            "snip20",
            "snip25",
            "bitcoin-like",
            "evm-base",
            "svm-base",
            "substrate",
            "unknown",
            "sdk.factory"
          ],
          "default": "sdk.coin",
          "description": "[OPTIONAL] The potential options for type of asset. By default, assumes sdk.coin"
        },
        "denomUnits": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/denomUnit"
          },
          "minContains": 1
        },
        "coingeckoId": {
          "type": "string",
          "description": "[OPTIONAL] The coingecko id to fetch asset data from coingecko v3 api. See https://api.coingecko.com/api/v3/coins/list"
        }
      },
      "additionalProperties": false
    },
    "denomUnit": {
      "type": "object",
      "required": [
        "denom",
        "exponent"
      ],
      "properties": {
        "denom": {
          "type": "string"
        },
        "exponent": {
          "type": "integer"
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minContains": 1
        }
      },
      "additionalProperties": false
    },
    "ibcTransition": {
      "type": "object",
      "required": [
        "type",
        "counterparty",
        "chain"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ibc"
          ]
        },
        "counterparty": {
          "type": "object",
          "required": [
            "chainName",
            "baseDenom",
            "channelId"
          ],
          "properties": {
            "chainName": {
              "type": "string",
              "description": "The name of the counterparty chain. (must match exactly the chain name used in the Chain Registry)"
            },
            "baseDenom": {
              "type": "string",
              "description": "The base unit of the asset on its source platform. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform."
            },
            "channelId": {
              "type": "string",
              "pattern": "^channel-(JEnb|\\d+)$",
              "description": "The counterparty IBC transfer channel(, e.g., 'channel-1')."
            }
          },
          "additionalProperties": false
        },
        "chain": {
          "type": "object",
          "required": [
            "channelId",
            "path"
          ],
          "properties": {
            "path": {
              "type": "string",
              "description": "The port/channel/denom input string that generates the 'ibc/...' denom."
            },
            "channelId": {
              "type": "string",
              "pattern": "^channel-\\d+$",
              "description": "The chain's IBC transfer channel(, e.g., 'channel-1')."
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "ibcCw20Transition": {
      "type": "object",
      "required": [
        "type",
        "counterparty",
        "chain"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ibc-cw20"
          ]
        },
        "counterparty": {
          "type": "object",
          "required": [
            "chainName",
            "baseDenom",
            "port",
            "channelId"
          ],
          "properties": {
            "port": {
              "type": "string",
              "description": "The port used to transfer IBC assets; often 'transfer', but sometimes varies, e.g., for outgoing cw20 transfers."
            },
            "chainName": {
              "type": "string",
              "description": "The name of the counterparty chain. (must match exactly the chain name used in the Chain Registry)"
            },
            "baseDenom": {
              "type": "string",
              "description": "The base unit of the asset on its source platform. E.g., when describing ATOM from Cosmos Hub, specify 'uatom', NOT 'atom' nor 'ATOM'; base units are unique per platform."
            },
            "channelId": {
              "type": "string",
              "pattern": "^channel-\\d+$",
              "description": "The counterparty IBC transfer channel(, e.g., 'channel-1')."
            }
          },
          "additionalProperties": false
        },
        "chain": {
          "type": "object",
          "required": [
            "port",
            "channelId",
            "path"
          ],
          "properties": {
            "port": {
              "type": "string",
              "description": "The port used to transfer IBC assets; often 'transfer', but sometimes varies, e.g., for outgoing cw20 transfers."
            },
            "path": {
              "type": "string",
              "description": "The port/channel/denom input string that generates the 'ibc/...' denom."
            },
            "channelId": {
              "type": "string",
              "pattern": "^channel-\\d+$",
              "description": "The chain's IBC transfer channel(, e.g., 'channel-1')."
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "nonIbcTransition": {
      "type": "object",
      "required": [
        "type",
        "counterparty",
        "provider"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "bridge",
            "liquid-stake",
            "synthetic",
            "wrapped",
            "additional-mintage",
            "test-mintage"
          ]
        },
        "counterparty": {
          "type": "object",
          "required": [
            "chainName",
            "baseDenom"
          ],
          "properties": {
            "contract": {
              "type": "string",
              "description": "The contract address where the transition takes place, where applicable. E.g., The Ethereum contract that locks up the asset while it's minted on another chain."
            },
            "chainName": {
              "type": "string",
              "description": "The chain or platform from which the asset originates. E.g., 'cosmoshub', 'ethereum', 'forex', or 'nasdaq'"
            },
            "baseDenom": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "chain": {
          "type": "object",
          "required": [
            "contract"
          ],
          "properties": {
            "contract": {
              "type": "string",
              "description": "The contract address where the transition takes place, where applicable. E.g., The Ethereum contract that locks up the asset while it's minted on another chain."
            }
          },
          "additionalProperties": false
        },
        "provider": {
          "type": "string",
          "description": "The entity offering the service. E.g., 'Gravity Bridge' [Network] or 'Tether' [Company]."
        }
      },
      "additionalProperties": false
    }
  }
}